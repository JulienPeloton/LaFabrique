[InstrumentParameters]
## Parameter file to generate SO-like data set
## It includes: masks, covariance matrices, noise maps, foregrounds

#####################################################################
######################### Input scan strategy #######################
#####################################################################
## Name of the HDF5 file containing the input observations to mimick
## Ideally in the future I will connect the scan strategy module to
## this module.
input_observations = additional_files/SO.hdf5

## Sampling frequency used to generate the input observations [Hz]
input_sampling_freq = 15

## Time of observation (calendar) used to generate the input observations
## [year]
input_calendar_time = 0.0328767

## Efficiency of observation used to generate the input observations
input_efficiency = 0.2

#####################################################################
######################### Output instrument #########################
#####################################################################
## Frequency channels (GHz) per band
frequencies = 27_LF 39_LF 90_MF 150_MF 150_HF 220_HF 220_UHF 270_UHF

## Number of tubes per band (Low/Medium/High/UltraHigh Frequencies)
tubes = 1_LF 4_MF 1_HF 1_UHF

## Noise Equivalent Temperature for the array [uK.sqrt(s)]
## There should be as many entries as for frequency channels
net_per_arrays = 20.8 14.3 6.5 8.1 6.9 15.8 13.8 35.6

## Sampling frequency desired to scan the sky [Hz]. Over-ride the
## sampling frequency used to generate the input observations, and
## rescale the observations.
sampling_freq = 30

## Total time of observation desired [year]
calendar_time = 5

## Efficiency of observation desired. Over-ride the efficiency used
## to generate the input observations, and rescale the observations.
efficiency = 0.2

## Resolution of the output
nside_out = 512

#####################################################################
######################### Noise generation ##########################
#####################################################################
## The noise is white (but can be inhomogeneous according to the scan
## strategy), and the white noise level is determined by the
## instrument parameters

## Seed to generate random numbers
initial_seed = 5834957

## Number of MC realizations to perform
nmc = 1

## Method of factorisation: 0 (eigenvalue approximation),
## 1 (Cholesky, Python), 2 (Cholesky, C)
inversion_method = 2

## Lapack (mandatory if inversion_method = 2), ignored otherwise
#lapack = </Users/julien/Documents/lib/lapack-release/LAPACKE/include/lapacke.h>
lapack = <mkl_lapack.h>

## Criterion used in the creation of the covariance to select pixels
## 0 <= epsilon < 1/4
epsilon = 0.

## Compute only covariance matrices for all frequencies (but no noise MC)
only_covariance = False
